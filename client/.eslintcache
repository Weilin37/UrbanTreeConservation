[{"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/index.js":"1","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/App.js":"2","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/store/index.js":"3","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/NavBar.js":"4","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/mapSlice.js":"5","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/Map.js":"6","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/markerSlice.js":"7","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/SearchBar.js":"8","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawBounds.js":"9","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawButtons.js":"10","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawCustom.js":"11","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/GetMarkers.js":"12","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/RescanMarkers.js":"13","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DataViewButtons.js":"14","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawAnalysisNative.js":"15","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawAnalysisSimilarity.js":"16","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/analysisSlice.js":"17","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawSimilarityButtons.js":"18"},{"size":279,"mtime":1607134147775,"results":"19","hashOfConfig":"20"},{"size":412,"mtime":1608746365863,"results":"21","hashOfConfig":"20"},{"size":667,"mtime":1608959879638,"results":"22","hashOfConfig":"20"},{"size":824,"mtime":1607415102683,"results":"23","hashOfConfig":"20"},{"size":1880,"mtime":1608505809654,"results":"24","hashOfConfig":"20"},{"size":4883,"mtime":1609026071682,"results":"25","hashOfConfig":"20"},{"size":3941,"mtime":1608745618173,"results":"26","hashOfConfig":"20"},{"size":2297,"mtime":1608505809653,"results":"27","hashOfConfig":"20"},{"size":546,"mtime":1608505809650,"results":"28","hashOfConfig":"20"},{"size":1876,"mtime":1608529068007,"results":"29","hashOfConfig":"20"},{"size":2943,"mtime":1608960603516,"results":"30","hashOfConfig":"20"},{"size":3220,"mtime":1608961837802,"results":"31","hashOfConfig":"20"},{"size":3550,"mtime":1608529068009,"results":"32","hashOfConfig":"20"},{"size":2713,"mtime":1608529068006,"results":"33","hashOfConfig":"20"},{"size":2725,"mtime":1609183418469,"results":"34","hashOfConfig":"20"},{"size":2044,"mtime":1609053085796,"results":"35","hashOfConfig":"20"},{"size":2462,"mtime":1609051360664,"results":"36","hashOfConfig":"20"},{"size":4348,"mtime":1609183977848,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"i0zfl8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"40"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/index.js",[],["78","79"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/App.js",["80","81"],"import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport { LeafMap } from \"./Map\";\nimport Grid from '@material-ui/core/Grid';\nimport { VictoryBar } from 'victory';\nimport Paper from '@material-ui/core/Paper';\n\nconst App = () => (\n  <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n    <NavBar />\n    <Grid item align=\"center\" xs={12} ><LeafMap /></Grid>\n  </Grid>\n);\n\nexport default App;","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/store/index.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/NavBar.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/mapSlice.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/Map.js",["82","83"],"import React, { useEffect } from \"react\";\nimport RescanMarkers from \"./RescanMarkers\";\nimport DrawBounds from \"./DrawBounds\";\nimport FreeDrawCustom from \"./FreeDrawCustom\";\nimport FreeDrawButtons from \"./FreeDrawButtons\";\nimport DrawAnalysisNative from \"./DrawAnalysisNative\";\nimport DrawSimilarityButtons from \"./DrawSimilarityButtons\";\nimport GetMarkers from \"./GetMarkers\";\nimport DataViewButtons from \"./DataViewButtons\";\nimport { Map, TileLayer } from \"react-leaflet\";\nimport \"../../css/app.css\";\nimport { useSelector, useDispatch, batch } from \"react-redux\";\nimport { getGlobal, getCity, getFreeDraw, setEndpoint, setViewStatus, clearCity, setScanStatus, setScanRadius, setScanCenter, setScanZoom } from \"../features/markerSlice\";\nimport { setSearch } from \"../features/mapSlice\";\n\nexport const LeafMap = () => {\n    const dispatch = useDispatch();\n\n    // state\n    const stateMarker = useSelector(state => state.marker);\n    const stateMap = useSelector(state => state.map);\n\n    const cityZoom = stateMarker.cityZoom;\n\n    // Effects\n    useEffect(() => {\n        dispatch(getGlobal(stateMarker.endpoint));\n    }, [dispatch]);\n\n    useEffect(() => {\n        if (stateMarker.scan_status === \"scanning\" && stateMarker.view_status === \"city\") {\n           dispatch(getCity(stateMarker.endpoint));\n        }\n        else if (stateMarker.scan_status === \"scanning\" && stateMarker.view_status === \"freedraw\") {\n            console.log(\"api\")\n           dispatch(getFreeDraw(stateMarker.endpoint));\n        }\n    }, [stateMarker.scan_status]);\n\n    function toRadian(degree) {\n        return degree*Math.PI/180;\n    }\n\n    function getDistance(origin, destination) {\n        // return distance in meters\n        var lon1 = toRadian(origin[1]),\n            lat1 = toRadian(origin[0]),\n            lon2 = toRadian(destination[1]),\n            lat2 = toRadian(destination[0]);\n\n        var deltaLat = lat2 - lat1;\n        var deltaLon = lon2 - lon1;\n\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\n        var c = 2 * Math.asin(Math.sqrt(a));\n        var EARTH_RADIUS = 6371;\n        return c * EARTH_RADIUS * 1000;\n    }\n\n    function handlezoomend(e) {\n        const map = e.target;\n        const zoom = map.getZoom();\n\n        if (zoom < cityZoom) {\n            if (stateMarker.view_status !== \"global\") {\n                dispatch(setViewStatus(\"global\"));\n            }\n        } else {\n            if (stateMarker.view_status === \"global\" && stateMarker.previous_view_status === \"global\") {\n                dispatch(setViewStatus(\"city\"));\n            } else if (stateMarker.view_status === \"global\" && stateMarker.previous_view_status !== \"global\") {\n                dispatch(setViewStatus(stateMarker.previous_view_status));\n            }\n        }\n    }\n\n    function handlemoveend(e) {\n        const map = e.target;\n        const zoom = map.getZoom();\n        const lat = map.getCenter().lat;\n        const lng = map.getCenter().lng;\n\n        const bounds = map.getBounds();\n        const latNE = bounds['_northEast'].lat\n        const lngNE = bounds['_northEast'].lng\n        const radius = Math.round(0.5*getDistance([latNE, lngNE],[lat, lng]));\n        if (zoom >= cityZoom) {\n            if (stateMap.search === \"searching\") {\n                batch(() => {\n                    dispatch(clearCity());\n                    dispatch(setScanRadius(radius));\n                    dispatch(setScanCenter({lat:lat, lng:lng}));\n                    dispatch(setScanZoom(zoom));\n                    dispatch(setSearch(\"waiting\"));\n                    dispatch(setEndpoint({type:\"city\", lat:lat, lng:lng, radius:radius, limit:1000}));\n                    dispatch(setScanStatus(\"scanning\"));\n                });\n            }\n        }\n\n    }\n\n    // render component\n    if (stateMarker.global.length > 0) {\n        return (\n            <Map onmoveend={handlemoveend} onzoomend={handlezoomend} doubleClickZoom={false} preferCanvas={true} center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\n              <TileLayer\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n              />\n              <DrawBounds />\n              <GetMarkers />\n              <RescanMarkers />\n              <FreeDrawButtons />\n              <FreeDrawCustom />\n              <DataViewButtons />\n              <DrawAnalysisNative />\n              <DrawSimilarityButtons />\n            </Map>\n        );\n    } else {\n        return (\n            <Map center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\n              <TileLayer\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\n              />\n            </Map>\n        );\n    }\n\n}","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/markerSlice.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/SearchBar.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawBounds.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawButtons.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawCustom.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/GetMarkers.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/RescanMarkers.js",["84","85"],"import { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AdjustIcon from '@material-ui/icons/Adjust';\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useLeaflet } from \"react-leaflet\";\nimport { NONE } from 'react-leaflet-freedraw';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { setEndpoint, clearCity, setScanStatus, setScanRadius, setScanCenter, setScanZoom, setViewStatus } from \"../features/markerSlice\";\nimport { setDrawMode, setSearch } from \"../features/mapSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  scanMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(28),\n    left: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000,\n  }\n}));\n\n\nconst RescanMarkers = () => {\n    const stateMarker = useSelector(state => state.marker);\n    const dispatch = useDispatch();\n    // classes\n    const classes = useStyles();\n    const { map } = useLeaflet();\n\n    function toRadian(degree) {\n        return degree*Math.PI/180;\n    }\n\n    function getDistance(origin, destination) {\n        // return distance in meters\n        var lon1 = toRadian(origin[1]),\n            lat1 = toRadian(origin[0]),\n            lon2 = toRadian(destination[1]),\n            lat2 = toRadian(destination[0]);\n\n        var deltaLat = lat2 - lat1;\n        var deltaLon = lon2 - lon1;\n\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\n        var c = 2 * Math.asin(Math.sqrt(a));\n        var EARTH_RADIUS = 6371;\n        return c * EARTH_RADIUS * 1000;\n    }\n\n    function handleclick(e) {\n        if (stateMarker.view_status === \"city\" || stateMarker.view_status === \"global\") {\n            if (map.getZoom() < stateMarker.cityZoom) {\n                map.setZoom(stateMarker.cityZoom);\n            }\n            const zoom = map.getZoom();\n            const center = map.getCenter();\n            const lat = center.lat;\n            const lng = center.lng;\n            const bounds = map.getBounds();\n            const latNE = bounds['_northEast'].lat\n            const lngNE = bounds['_northEast'].lng\n            const radius = Math.round(0.5*getDistance([latNE, lngNE],[lat, lng]));\n\n            batch(() => {\n                dispatch(clearCity());\n                dispatch(setScanRadius(radius));\n                dispatch(setScanCenter({lat:lat, lng:lng}));\n                dispatch(setSearch(\"waiting\"));\n                if (zoom < stateMarker.cityZoom) {\n                    dispatch(setScanZoom(stateMarker.cityZoom));\n                } else {\n                    dispatch(setScanZoom(zoom));\n                }\n                dispatch(setViewStatus(\"city\"))\n                dispatch(setEndpoint({type:\"city\", lat:lat, lng:lng, radius:radius, limit:1000}));\n                dispatch(setScanStatus(\"scanning\"));\n            });\n        } else if (stateMarker.view_status === \"freedraw\") {\n            if (stateMarker.endpoint.length > 0) {\n                batch(() => {\n                    dispatch(setViewStatus(\"freedraw\"))\n                    dispatch(setScanStatus(\"scanning\"));\n                    dispatch(setDrawMode(NONE));\n                });\n            }\n        }\n\n    }\n\n    return (\n        <div>\n            <Fab onClick={handleclick} size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.scanMargin}>\n                <AdjustIcon />\n            </Fab>\n        </div>\n    );\n}\n\nexport default RescanMarkers;","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DataViewButtons.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawAnalysisNative.js",["86"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawAnalysisSimilarity.js",["87","88","89","90","91","92","93","94","95"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/analysisSlice.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawSimilarityButtons.js",["96","97","98","99","100"],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":5,"column":10,"nodeType":"107","messageId":"108","endLine":5,"endColumn":20},{"ruleId":"105","severity":1,"message":"109","line":6,"column":8,"nodeType":"107","messageId":"108","endLine":6,"endColumn":13},{"ruleId":"110","severity":1,"message":"111","line":28,"column":8,"nodeType":"112","endLine":28,"endColumn":18,"suggestions":"113"},{"ruleId":"110","severity":1,"message":"114","line":38,"column":8,"nodeType":"112","endLine":38,"endColumn":33,"suggestions":"115"},{"ruleId":"105","severity":1,"message":"116","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":24},{"ruleId":"105","severity":1,"message":"117","line":8,"column":10,"nodeType":"107","messageId":"108","endLine":8,"endColumn":23},{"ruleId":"105","severity":1,"message":"118","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"118","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":16},{"ruleId":"105","severity":1,"message":"119","line":3,"column":10,"nodeType":"107","messageId":"108","endLine":3,"endColumn":20},{"ruleId":"105","severity":1,"message":"106","line":4,"column":10,"nodeType":"107","messageId":"108","endLine":4,"endColumn":20},{"ruleId":"105","severity":1,"message":"120","line":4,"column":81,"nodeType":"107","messageId":"108","endLine":4,"endColumn":92},{"ruleId":"105","severity":1,"message":"121","line":4,"column":94,"nodeType":"107","messageId":"108","endLine":4,"endColumn":106},{"ruleId":"105","severity":1,"message":"109","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":13},{"ruleId":"105","severity":1,"message":"122","line":7,"column":10,"nodeType":"107","messageId":"108","endLine":7,"endColumn":28},{"ruleId":"105","severity":1,"message":"123","line":7,"column":30,"nodeType":"107","messageId":"108","endLine":7,"endColumn":48},{"ruleId":"105","severity":1,"message":"124","line":7,"column":50,"nodeType":"107","messageId":"108","endLine":7,"endColumn":63},{"ruleId":"105","severity":1,"message":"125","line":2,"column":10,"nodeType":"107","messageId":"108","endLine":2,"endColumn":21},{"ruleId":"105","severity":1,"message":"126","line":4,"column":8,"nodeType":"107","messageId":"108","endLine":4,"endColumn":11},{"ruleId":"105","severity":1,"message":"127","line":5,"column":8,"nodeType":"107","messageId":"108","endLine":5,"endColumn":23},{"ruleId":"105","severity":1,"message":"128","line":6,"column":10,"nodeType":"107","messageId":"108","endLine":6,"endColumn":23},{"ruleId":"105","severity":1,"message":"129","line":30,"column":13,"nodeType":"107","messageId":"108","endLine":30,"endColumn":16},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'VictoryBar' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stateMarker.endpoint'. Either include it or remove the dependency array.","ArrayExpression",["132"],"React Hook useEffect has missing dependencies: 'dispatch', 'stateMarker.endpoint', and 'stateMarker.view_status'. Either include them or remove the dependency array.",["133"],"'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'Circle' is defined but never used.","'makeStyles' is defined but never used.","'VictoryAxis' is defined but never used.","'VictoryTheme' is defined but never used.","'setSimilarityCity1' is defined but never used.","'setSimilarityCity2' is defined but never used.","'getSimilarity' is defined but never used.","'setDrawMode' is defined but never used.","'Fab' is defined but never used.","'BorderColorIcon' is defined but never used.","'setViewStatus' is defined but never used.","'map' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"134","fix":"135"},{"desc":"136","fix":"137"},"Update the dependencies array to be: [dispatch, stateMarker.endpoint]",{"range":"138","text":"139"},"Update the dependencies array to be: [dispatch, stateMarker.endpoint, stateMarker.scan_status, stateMarker.view_status]",{"range":"140","text":"141"},[1123,1133],"[dispatch, stateMarker.endpoint]",[1518,1543],"[dispatch, stateMarker.endpoint, stateMarker.scan_status, stateMarker.view_status]"]