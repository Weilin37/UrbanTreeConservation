[{"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/index.js":"1","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/App.js":"2","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/store/index.js":"3","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/NavBar.js":"4","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/mapSlice.js":"5","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/Map.js":"6","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/markerSlice.js":"7","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/SearchBar.js":"8","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawBounds.js":"9","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawButtons.js":"10","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawCustom.js":"11","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/GetMarkers.js":"12","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/RescanMarkers.js":"13","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DataViewButtons.js":"14","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawAnalysisNative.js":"15","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawAnalysisSimilarity.js":"16","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/analysisSlice.js":"17","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawSimilarityButtons.js":"18"},{"size":279,"mtime":1607134147775,"results":"19","hashOfConfig":"20"},{"size":412,"mtime":1608746365863,"results":"21","hashOfConfig":"20"},{"size":667,"mtime":1608959879638,"results":"22","hashOfConfig":"20"},{"size":824,"mtime":1607415102683,"results":"23","hashOfConfig":"20"},{"size":1880,"mtime":1608505809654,"results":"24","hashOfConfig":"20"},{"size":4883,"mtime":1609026071682,"results":"25","hashOfConfig":"20"},{"size":3941,"mtime":1608745618173,"results":"26","hashOfConfig":"20"},{"size":2297,"mtime":1608505809653,"results":"27","hashOfConfig":"20"},{"size":546,"mtime":1608505809650,"results":"28","hashOfConfig":"20"},{"size":1876,"mtime":1608529068007,"results":"29","hashOfConfig":"20"},{"size":2943,"mtime":1608960603516,"results":"30","hashOfConfig":"20"},{"size":3220,"mtime":1608961837802,"results":"31","hashOfConfig":"20"},{"size":3550,"mtime":1608529068009,"results":"32","hashOfConfig":"20"},{"size":2713,"mtime":1608529068006,"results":"33","hashOfConfig":"20"},{"size":2042,"mtime":1608747692530,"results":"34","hashOfConfig":"20"},{"size":1190,"mtime":1609026729126,"results":"35","hashOfConfig":"20"},{"size":1846,"mtime":1609026685121,"results":"36","hashOfConfig":"20"},{"size":4220,"mtime":1609026071684,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"i0zfl8",{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"40"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"40"},"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/index.js",[],["79","80"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/App.js",["81","82"],"import React from \"react\";\nimport NavBar from \"./NavBar\";\nimport { LeafMap } from \"./Map\";\nimport Grid from '@material-ui/core/Grid';\nimport { VictoryBar } from 'victory';\nimport Paper from '@material-ui/core/Paper';\n\nconst App = () => (\n  <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\n    <NavBar />\n    <Grid item align=\"center\" xs={12} ><LeafMap /></Grid>\n  </Grid>\n);\n\nexport default App;","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/store/index.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/NavBar.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/mapSlice.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/Map.js",["83","84"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/markerSlice.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/SearchBar.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawBounds.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawButtons.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/FreeDrawCustom.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/GetMarkers.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/RescanMarkers.js",["85","86"],"import { makeStyles } from '@material-ui/core/styles';\nimport Fab from '@material-ui/core/Fab';\nimport AdjustIcon from '@material-ui/icons/Adjust';\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport { useLeaflet } from \"react-leaflet\";\nimport { NONE } from 'react-leaflet-freedraw';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\nimport { setEndpoint, clearCity, setScanStatus, setScanRadius, setScanCenter, setScanZoom, setViewStatus } from \"../features/markerSlice\";\nimport { setDrawMode, setSearch } from \"../features/mapSlice\";\n\nconst useStyles = makeStyles((theme) => ({\n  scanMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(28),\n    left: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000,\n  }\n}));\n\n\nconst RescanMarkers = () => {\n    const stateMarker = useSelector(state => state.marker);\n    const dispatch = useDispatch();\n    // classes\n    const classes = useStyles();\n    const { map } = useLeaflet();\n\n    function toRadian(degree) {\n        return degree*Math.PI/180;\n    }\n\n    function getDistance(origin, destination) {\n        // return distance in meters\n        var lon1 = toRadian(origin[1]),\n            lat1 = toRadian(origin[0]),\n            lon2 = toRadian(destination[1]),\n            lat2 = toRadian(destination[0]);\n\n        var deltaLat = lat2 - lat1;\n        var deltaLon = lon2 - lon1;\n\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\n        var c = 2 * Math.asin(Math.sqrt(a));\n        var EARTH_RADIUS = 6371;\n        return c * EARTH_RADIUS * 1000;\n    }\n\n    function handleclick(e) {\n        if (stateMarker.view_status === \"city\" || stateMarker.view_status === \"global\") {\n            if (map.getZoom() < stateMarker.cityZoom) {\n                map.setZoom(stateMarker.cityZoom);\n            }\n            const zoom = map.getZoom();\n            const center = map.getCenter();\n            const lat = center.lat;\n            const lng = center.lng;\n            const bounds = map.getBounds();\n            const latNE = bounds['_northEast'].lat\n            const lngNE = bounds['_northEast'].lng\n            const radius = Math.round(0.5*getDistance([latNE, lngNE],[lat, lng]));\n\n            batch(() => {\n                dispatch(clearCity());\n                dispatch(setScanRadius(radius));\n                dispatch(setScanCenter({lat:lat, lng:lng}));\n                dispatch(setSearch(\"waiting\"));\n                if (zoom < stateMarker.cityZoom) {\n                    dispatch(setScanZoom(stateMarker.cityZoom));\n                } else {\n                    dispatch(setScanZoom(zoom));\n                }\n                dispatch(setViewStatus(\"city\"))\n                dispatch(setEndpoint({type:\"city\", lat:lat, lng:lng, radius:radius, limit:1000}));\n                dispatch(setScanStatus(\"scanning\"));\n            });\n        } else if (stateMarker.view_status === \"freedraw\") {\n            if (stateMarker.endpoint.length > 0) {\n                batch(() => {\n                    dispatch(setViewStatus(\"freedraw\"))\n                    dispatch(setScanStatus(\"scanning\"));\n                    dispatch(setDrawMode(NONE));\n                });\n            }\n        }\n\n    }\n\n    return (\n        <div>\n            <Fab onClick={handleclick} size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.scanMargin}>\n                <AdjustIcon />\n            </Fab>\n        </div>\n    );\n}\n\nexport default RescanMarkers;","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DataViewButtons.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawAnalysisNative.js",["87","88","89","90","91"],"import { useSelector } from \"react-redux\";\nimport { Circle } from \"react-leaflet\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport { VictoryBar, VictoryChart, VictoryAxis, VictoryTheme } from 'victory';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\n\nconst useStyles = makeStyles((theme) => ({\n  analysisMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(7),\n    right: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000,\n    width: 150,\n    height:150\n  }\n}));\n\n// Custom map components\nconst DrawAnalysisNative = () => {\n    const stateMarker = useSelector(state => state.marker);\n    const classes = useStyles();\n\n    /*\n    city: \"Seattle\"\n    condition: \" \"\n    diameter_breast_height_cm: \"71.12\"\n    geom: \"0101000020E610000018A1E93672945EC09E2B63A661CF4740\"\n    latitude: 47.62016754\n    longitude: -122.31947109999999\n    native: \"FALSE\"\n    scientific_name: \"Tilia cordata\"\n    state: \"Washington\"\n    */\n\n\n\n    if (stateMarker.view_status === \"freedraw\" && stateMarker.freedraw.length > 0) {\n        const total = stateMarker.freedraw.length;\n\n        const countNonNative = stateMarker.freedraw.reduce((cnt, row) => {\n            if (row.native === \"FALSE\") {\n                return cnt = cnt+1;\n            } else {\n                return cnt;\n            }\n        }, 0);\n\n        const countNative = stateMarker.freedraw.reduce((cnt, row) => {\n            if (row.native === \"TRUE\") {\n                return cnt = cnt+1;\n            } else {\n                return cnt;\n            }\n        }, 0);\n\n        console.log(total);\n        console.log(countNonNative);\n        console.log(countNative);\n\n        return(\n            <Box className={classes.analysisMargin}>\n            <Paper>\n                <h5>Total: {total}</h5>\n                <h5>Native: {countNative}</h5>\n                <h5>Non-Native: {countNonNative}</h5>\n            </Paper>\n            </Box>\n        )\n    } else {\n        return null\n    }\n}\n\nexport default DrawAnalysisNative;","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawAnalysisSimilarity.js",["92","93","94","95","96","97","98","99","100","101"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/analysisSlice.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/DrawSimilarityButtons.js",["102","103","104","105","106"],"import { makeStyles } from '@material-ui/core/styles';\nimport { setDrawMode } from \"../features/mapSlice\";\nimport { useDispatch, useSelector, batch } from \"react-redux\";\nimport Fab from '@material-ui/core/Fab';\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\nimport { setViewStatus } from \"../features/markerSlice\";\nimport { useLeaflet } from \"react-leaflet\";\nimport Chip from '@material-ui/core/Chip';\nimport Paper from '@material-ui/core/Paper';\nimport DrawAnalysisSimilarity from \"./DrawAnalysisSimilarity\";\nimport { getSimilarity, setSimilarityCity1, setSimilarityCity2, setSimilarityState1, setSimilarityState2 } from \"../features/analysisSlice\";\nimport Button from '@material-ui/core/Button';\n\nconst useStyles = makeStyles((theme) => ({\n  chipMargin: {\n    margin: theme.spacing(1),\n    top: theme.spacing(10),\n    right: theme.spacing(1),\n    position: 'fixed',\n    zIndex: 1000,\n  }\n}));\n\n\nconst DrawSimilarityButtons = () => {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n    const stateMarker = useSelector(state => state.marker);\n    const stateAnalysis = useSelector(state => state.analysis);\n    const { map } = useLeaflet();\n\n    function handleDelete(e) {\n        if (e === 1) {\n            batch(() => {\n                dispatch(setSimilarityCity1(\"\"));\n                dispatch(setSimilarityState1(\"\"));\n            });\n        } else if (e === 2) {\n            batch(() => {\n                dispatch(setSimilarityCity2(\"\"));\n                dispatch(setSimilarityState2(\"\"));\n            });\n        }\n    }\n\n    function handleSimilarityClick() {\n        if (stateAnalysis.similarityCity1 !== \"\" && stateAnalysis.similarityCity2 !== \"\") {\n            let endpoint = '/api/get/citysimilarity?city1='+stateAnalysis.similarityCity1+'&city2='+stateAnalysis.similarityCity2+\n            '&state1='+stateAnalysis.similarityState1+'&state2='+stateAnalysis.similarityState2;\n            console.log(endpoint);\n            dispatch(getSimilarity(endpoint));\n        }\n    }\n\n    if (stateMarker.view_status === \"global\" && (stateAnalysis.similarityCity1 !== \"\" || stateAnalysis.similarityCity2 !== \"\")) {\n\n        if (stateAnalysis.similarityCity1 !== \"\" && stateAnalysis.similarityCity2 === \"\") {\n            return (\n                <Paper className={classes.chipMargin}>\n                    <DrawAnalysisSimilarity />\n                    <Chip\n                      size=\"small\"\n                      label={stateAnalysis.similarityCity1+\", \"+stateAnalysis.similarityState1}\n                      onDelete={() => handleDelete(1)}\n                    />\n                    <Button onClick={handleSimilarityClick} variant=\"contained\" color=\"primary\">Primary</Button>\n                </Paper>\n            );\n        } else if (stateAnalysis.similarityCity2 !== \"\" && stateAnalysis.similarityCity1 === \"\") {\n            return (\n                <Paper className={classes.chipMargin}>\n                    <DrawAnalysisSimilarity />\n                    <Chip\n                      size=\"small\"\n                      label={stateAnalysis.similarityCity2+\", \"+stateAnalysis.similarityState2}\n                      onDelete={() => handleDelete(2)}\n                    />\n                    <Button onClick={handleSimilarityClick} variant=\"contained\" color=\"primary\">Primary</Button>\n                </Paper>\n            );\n        } else {\n            return (\n                <Paper className={classes.chipMargin}>\n                    <DrawAnalysisSimilarity />\n                    <Chip\n                      size=\"small\"\n                      label={stateAnalysis.similarityCity1+\", \"+stateAnalysis.similarityState1}\n                      onDelete={() => handleDelete(1)}\n                    />\n                    <Chip\n                      size=\"small\"\n                      label={stateAnalysis.similarityCity2+\", \"+stateAnalysis.similarityState2}\n                      onDelete={() => handleDelete(2)}\n                    />\n                    <Button onClick={handleSimilarityClick} variant=\"contained\" color=\"primary\">Primary</Button>\n                </Paper>\n            );\n        }\n\n    } else {\n        return null\n    }\n}\n\nexport default DrawSimilarityButtons;",{"ruleId":"107","replacedBy":"108"},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","severity":1,"message":"112","line":5,"column":10,"nodeType":"113","messageId":"114","endLine":5,"endColumn":20},{"ruleId":"111","severity":1,"message":"115","line":6,"column":8,"nodeType":"113","messageId":"114","endLine":6,"endColumn":13},{"ruleId":"116","severity":1,"message":"117","line":28,"column":8,"nodeType":"118","endLine":28,"endColumn":18,"suggestions":"119"},{"ruleId":"116","severity":1,"message":"120","line":38,"column":8,"nodeType":"118","endLine":38,"endColumn":33,"suggestions":"121"},{"ruleId":"111","severity":1,"message":"122","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":24},{"ruleId":"111","severity":1,"message":"123","line":8,"column":10,"nodeType":"113","messageId":"114","endLine":8,"endColumn":23},{"ruleId":"111","severity":1,"message":"124","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":20},{"ruleId":"111","severity":1,"message":"125","line":4,"column":22,"nodeType":"113","messageId":"114","endLine":4,"endColumn":34},{"ruleId":"111","severity":1,"message":"126","line":4,"column":36,"nodeType":"113","messageId":"114","endLine":4,"endColumn":47},{"ruleId":"111","severity":1,"message":"127","line":4,"column":49,"nodeType":"113","messageId":"114","endLine":4,"endColumn":61},{"ruleId":"111","severity":1,"message":"124","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":16},{"ruleId":"111","severity":1,"message":"112","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":20},{"ruleId":"111","severity":1,"message":"125","line":4,"column":22,"nodeType":"113","messageId":"114","endLine":4,"endColumn":34},{"ruleId":"111","severity":1,"message":"126","line":4,"column":36,"nodeType":"113","messageId":"114","endLine":4,"endColumn":47},{"ruleId":"111","severity":1,"message":"127","line":4,"column":49,"nodeType":"113","messageId":"114","endLine":4,"endColumn":61},{"ruleId":"111","severity":1,"message":"115","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":13},{"ruleId":"111","severity":1,"message":"128","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":28},{"ruleId":"111","severity":1,"message":"129","line":7,"column":30,"nodeType":"113","messageId":"114","endLine":7,"endColumn":48},{"ruleId":"111","severity":1,"message":"130","line":7,"column":50,"nodeType":"113","messageId":"114","endLine":7,"endColumn":63},{"ruleId":"111","severity":1,"message":"131","line":25,"column":11,"nodeType":"113","messageId":"114","endLine":25,"endColumn":18},{"ruleId":"111","severity":1,"message":"132","line":2,"column":10,"nodeType":"113","messageId":"114","endLine":2,"endColumn":21},{"ruleId":"111","severity":1,"message":"133","line":4,"column":8,"nodeType":"113","messageId":"114","endLine":4,"endColumn":11},{"ruleId":"111","severity":1,"message":"134","line":5,"column":8,"nodeType":"113","messageId":"114","endLine":5,"endColumn":23},{"ruleId":"111","severity":1,"message":"135","line":6,"column":10,"nodeType":"113","messageId":"114","endLine":6,"endColumn":23},{"ruleId":"111","severity":1,"message":"136","line":29,"column":13,"nodeType":"113","messageId":"114","endLine":29,"endColumn":16},"no-native-reassign",["137"],"no-negated-in-lhs",["138"],"no-unused-vars","'VictoryBar' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stateMarker.endpoint'. Either include it or remove the dependency array.","ArrayExpression",["139"],"React Hook useEffect has missing dependencies: 'dispatch', 'stateMarker.endpoint', and 'stateMarker.view_status'. Either include them or remove the dependency array.",["140"],"'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'Circle' is defined but never used.","'VictoryChart' is defined but never used.","'VictoryAxis' is defined but never used.","'VictoryTheme' is defined but never used.","'setSimilarityCity1' is defined but never used.","'setSimilarityCity2' is defined but never used.","'getSimilarity' is defined but never used.","'classes' is assigned a value but never used.","'setDrawMode' is defined but never used.","'Fab' is defined but never used.","'BorderColorIcon' is defined but never used.","'setViewStatus' is defined but never used.","'map' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},"Update the dependencies array to be: [dispatch, stateMarker.endpoint]",{"range":"145","text":"146"},"Update the dependencies array to be: [dispatch, stateMarker.endpoint, stateMarker.scan_status, stateMarker.view_status]",{"range":"147","text":"148"},[1123,1133],"[dispatch, stateMarker.endpoint]",[1518,1543],"[dispatch, stateMarker.endpoint, stateMarker.scan_status, stateMarker.view_status]"]