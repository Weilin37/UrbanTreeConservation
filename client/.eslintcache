[{"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\index.js":"1","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\store\\index.js":"2","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\App.js":"3","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\NavBar.js":"4","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\Map.js":"5","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\mapSlice.js":"6","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\markerSlice.js":"7","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\SearchBar.js":"8","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawCustom.js":"9","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawBounds.js":"10","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\RescanMarkers.js":"11","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawButtons.js":"12","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\GetMarkers.js":"13"},{"size":290,"mtime":1607204859726,"results":"14","hashOfConfig":"15"},{"size":601,"mtime":1607723585108,"results":"16","hashOfConfig":"15"},{"size":588,"mtime":1607723585099,"results":"17","hashOfConfig":"15"},{"size":848,"mtime":1607441961650,"results":"18","hashOfConfig":"15"},{"size":4010,"mtime":1608429179862,"results":"19","hashOfConfig":"15"},{"size":2123,"mtime":1608429136256,"results":"20","hashOfConfig":"15"},{"size":2903,"mtime":1608425907914,"results":"21","hashOfConfig":"15"},{"size":2386,"mtime":1608009360916,"results":"22","hashOfConfig":"15"},{"size":1290,"mtime":1608429445207,"results":"23","hashOfConfig":"15"},{"size":568,"mtime":1608425907901,"results":"24","hashOfConfig":"15"},{"size":2778,"mtime":1608425907910,"results":"25","hashOfConfig":"15"},{"size":2759,"mtime":1608429533516,"results":"26","hashOfConfig":"15"},{"size":1609,"mtime":1608425907906,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"9yxsz4",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\index.js",[],["60","61"],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\store\\index.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\App.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\NavBar.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\Map.js",["62"],"import React, { useEffect } from \"react\";\r\nimport RescanMarkers from \"./RescanMarkers\";\r\nimport DrawBounds from \"./DrawBounds\";\r\nimport FreeDrawCustom from \"./FreeDrawCustom\";\r\nimport FreeDrawButtons from \"./FreeDrawButtons\";\r\nimport GetMarkers from \"./GetMarkers\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\nimport \"../../css/app.css\";\r\nimport { useSelector, useDispatch, batch } from \"react-redux\";\r\nimport { getCities, getTrees, setEndpoint, setViewStatus, clearTrees, setScanStatus, setScanRadius, setScanCenter, setScanZoom } from \"../features/markerSlice\";\r\nimport { setSearch } from \"../features/mapSlice\";\r\n\r\nexport const LeafMap = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // state\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const stateMap = useSelector(state => state.map);\r\n\r\n    const clusterZoom = stateMarker.clusterZoom;\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        dispatch(getCities(\"/api/get/cities\"));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (stateMarker.scan_status === \"scanning\" && stateMarker.scan_zoom >= stateMarker.clusterZoom) {\r\n           dispatch(getTrees(stateMarker.endpoint));\r\n        }\r\n    }, [stateMarker.endpoint]);\r\n\r\n    function toRadian(degree) {\r\n        return degree*Math.PI/180;\r\n    }\r\n\r\n    function getDistance(origin, destination) {\r\n        // return distance in meters\r\n        var lon1 = toRadian(origin[1]),\r\n            lat1 = toRadian(origin[0]),\r\n            lon2 = toRadian(destination[1]),\r\n            lat2 = toRadian(destination[0]);\r\n\r\n        var deltaLat = lat2 - lat1;\r\n        var deltaLon = lon2 - lon1;\r\n\r\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n        var c = 2 * Math.asin(Math.sqrt(a));\r\n        var EARTH_RADIUS = 6371;\r\n        return c * EARTH_RADIUS * 1000;\r\n    }\r\n\r\n    function handlemoveend(e) {\r\n        const map = e.target;\r\n        const zoom = map.getZoom();\r\n        const lat = map.getCenter().lat;\r\n        const lng = map.getCenter().lng;\r\n\r\n        const bounds = map.getBounds();\r\n        const latNE = bounds['_northEast'].lat\r\n        const lngNE = bounds['_northEast'].lng\r\n        const radius = Math.round(0.5*getDistance([latNE, lngNE],[lat, lng]));\r\n\r\n        if (zoom < clusterZoom) {\r\n           dispatch(setViewStatus(\"cities\"));\r\n        }\r\n        else {\r\n            dispatch(setViewStatus(\"cluster\"));\r\n            if (stateMap.search === \"searching\") {\r\n                batch(() => {\r\n                    dispatch(clearTrees());\r\n                    dispatch(setScanRadius(radius));\r\n                    dispatch(setScanCenter({lat:lat, lng:lng}));\r\n                    dispatch(setScanZoom(zoom));\r\n                    dispatch(setSearch(\"waiting\"))\r\n                    dispatch(setEndpoint({type:\"trees\", lat:lat, lng:lng, radius:radius, limit:1000}));\r\n                    dispatch(setScanStatus(\"scanning\"));\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // render component\r\n    if (stateMarker.cities.length > 0) {\r\n        return (\r\n            <Map onmoveend={handlemoveend} doubleClickZoom={false} preferCanvas={true} center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n              <DrawBounds />\r\n              <GetMarkers />\r\n              <RescanMarkers />\r\n              <FreeDrawButtons />\r\n              <FreeDrawCustom />\r\n            </Map>\r\n        );\r\n    } else {\r\n        return (\r\n            <Map center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n              <RescanMarkers />\r\n            </Map>\r\n        );\r\n    }\r\n\r\n}","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\mapSlice.js",["63","64","65","66","67"],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from 'axios';\r\nimport Freedraw, { ALL, EDIT, CREATE, DELETE, NONE } from 'react-leaflet-freedraw';\r\n\r\n// CREATE Thunk\r\nexport const getSearch = createAsyncThunk(\"search/getSearch\", async (location, thunkAPI) => {\r\n    location = location.replace(\",\",\"%2C\")\r\n    location = location.replace(\" \",\"%20\")\r\n    try {\r\n        const response = await axios.get(\"https://api.opencagedata.com/geocode/v1/json?key=efb8bfa10d614e67b5ba72a2934f6b25&q=\"+location+\"&pretty=1\");\r\n        return await response.data;\r\n    } catch (error) {\r\n         return thunkAPI.rejectWithValue({ error: error.message });\r\n    }\r\n});\r\n\r\n\r\n// CREATE SLICE\r\nconst mapSlice = createSlice({\r\n  name: \"map\",\r\n  initialState: {\r\n    zoom: 3,\r\n    lat: 37.8,\r\n    lng: -96,\r\n    search: \"waiting\",\r\n    draw_mode: NONE,\r\n    draw_mode_button: false\r\n  },\r\n  reducers: {\r\n    setZoom: (state, action) => {state.zoom = action.payload},\r\n    setDrawMode: (state, action) => {state.draw_mode = action.payload},\r\n    setDrawModeButton: (state, action) => {state.draw_mode_button = action.payload},\r\n    setSearch: (state, action) => {state.search = action.payload},\r\n    setCenter: (state, action) => {\r\n        state.lat = action.payload.lat;\r\n        state.lng = action.payload.lng;\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder.addCase(getSearch.pending, (state) => {\r\n        state.loading = \"loading\";\r\n    });\r\n    builder.addCase(getSearch.fulfilled, (state, { payload }) => {\r\n        const lat = payload.results[0].geometry.lat\r\n        const lng = payload.results[0].geometry.lng\r\n\r\n        state.search = \"searching\";\r\n\r\n        state.lat = lat;\r\n        state.lng = lng;\r\n\r\n        state.loading = \"loaded\";\r\n\r\n        state.zoom = 10;\r\n    });\r\n    builder.addCase(getSearch.rejected,(state, action) => {\r\n        state.loading = \"error\";\r\n        state.error = action.error.message;\r\n    });\r\n  }\r\n});\r\n\r\nexport const {\r\n    setZoom,\r\n    setCenter,\r\n    setSearch,\r\n    setDrawModeButton,\r\n    setDrawMode\r\n} = mapSlice.actions;\r\n\r\nexport default mapSlice","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\markerSlice.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\SearchBar.js",[],["68","69"],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawCustom.js",["70","71","72","73","74","75","76","77","78","79"],"import React, {useRef} from \"react\";\r\nimport Freedraw, { ALL, EDIT, CREATE, DELETE, NONE } from 'react-leaflet-freedraw';\r\nimport \"../../css/freedraw.css\";\r\nimport { useDispatch, useSelector, batch } from \"react-redux\";\r\nimport { setDrawModeButton, setDrawMode } from \"../features/mapSlice\";\r\n\r\n// Custom map components\r\nconst FreeDrawCustom = () => {\r\n    const dispatch = useDispatch();\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const stateMap = useSelector(state => state.map);\r\n\r\n    const freeDrawRef = useRef(null);\r\n\r\n    // Listen for any markers added, removed or edited, and then output the lat lng boundaries.\r\n    function handleOnMarkers(e) {\r\n        console.log(\r\n          'LatLngs:',\r\n          e.latLngs,\r\n          'Polygons:',\r\n        );\r\n    };\r\n\r\n    function handleModeChange(e) {\r\n        console.log('mode changed', e.mode);\r\n\r\n        /*if (e.mode == 14) {\r\n            batch(() => {\r\n                setDrawModeButton(false);\r\n                setDrawMode(14);\r\n            });\r\n        }*/\r\n    };\r\n\r\n    return (\r\n        <Freedraw\r\n          mode={stateMap.draw_mode}\r\n          onMarkers={handleOnMarkers}\r\n          onModeChange={handleModeChange}\r\n          ref={freeDrawRef}\r\n        />\r\n    )\r\n\r\n}\r\n\r\nexport default FreeDrawCustom;","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawBounds.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\RescanMarkers.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawButtons.js",["80","81","82","83","84","85"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport { setDrawModeButton, setDrawMode } from \"../features/mapSlice\";\r\nimport { useDispatch, useSelector, batch } from \"react-redux\";\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport Freedraw, { ALL, EDIT, CREATE, DELETE, NONE } from 'react-leaflet-freedraw';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  freedrawmargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(7),\r\n    right: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  }\r\n}));\r\n\r\n\r\nconst FreeDrawButtons = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const stateMap = useSelector(state => state.map);\r\n\r\n    function handleSwitchClick(e) {\r\n        batch(() => {\r\n            dispatch(setDrawModeButton(!stateMap.draw_mode_button));\r\n            if (stateMap.draw_mode_button == false) {\r\n                dispatch(setDrawMode(CREATE));\r\n            } else {\r\n                dispatch(setDrawMode(EDIT));\r\n            }\r\n        });\r\n    }\r\n\r\n    function handleDeleteClick(e) {\r\n        batch(() => {\r\n            dispatch(setDrawModeButton(false));\r\n            dispatch(setDrawMode(DELETE));\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper elevation={3} className={classes.freedrawmargin} >\r\n                <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <FormControlLabel\r\n                        control={\r\n                            <Switch checked={stateMap.draw_mode_button} onClick={handleSwitchClick} color=\"primary\"/>\r\n                        }\r\n                        label=\"Free Draw\"\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button onClick={handleDeleteClick} variant=\"contained\" color=\"secondary\" startIcon={<DeleteIcon />}>\r\n                            Delete\r\n                        </Button>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <Button variant=\"contained\" color=\"primary\" startIcon={<CloudUploadIcon />}>\r\n                            Request\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FreeDrawButtons;","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\GetMarkers.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":31,"column":8,"nodeType":"92","endLine":31,"endColumn":30,"suggestions":"93"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":3,"column":20,"nodeType":"96","messageId":"97","endLine":3,"endColumn":23},{"ruleId":"94","severity":1,"message":"99","line":3,"column":25,"nodeType":"96","messageId":"97","endLine":3,"endColumn":29},{"ruleId":"94","severity":1,"message":"100","line":3,"column":31,"nodeType":"96","messageId":"97","endLine":3,"endColumn":37},{"ruleId":"94","severity":1,"message":"101","line":3,"column":39,"nodeType":"96","messageId":"97","endLine":3,"endColumn":45},{"ruleId":"86","replacedBy":"102"},{"ruleId":"88","replacedBy":"103"},{"ruleId":"94","severity":1,"message":"98","line":2,"column":20,"nodeType":"96","messageId":"97","endLine":2,"endColumn":23},{"ruleId":"94","severity":1,"message":"99","line":2,"column":25,"nodeType":"96","messageId":"97","endLine":2,"endColumn":29},{"ruleId":"94","severity":1,"message":"100","line":2,"column":31,"nodeType":"96","messageId":"97","endLine":2,"endColumn":37},{"ruleId":"94","severity":1,"message":"101","line":2,"column":39,"nodeType":"96","messageId":"97","endLine":2,"endColumn":45},{"ruleId":"94","severity":1,"message":"104","line":2,"column":47,"nodeType":"96","messageId":"97","endLine":2,"endColumn":51},{"ruleId":"94","severity":1,"message":"105","line":4,"column":36,"nodeType":"96","messageId":"97","endLine":4,"endColumn":41},{"ruleId":"94","severity":1,"message":"106","line":5,"column":10,"nodeType":"96","messageId":"97","endLine":5,"endColumn":27},{"ruleId":"94","severity":1,"message":"107","line":5,"column":29,"nodeType":"96","messageId":"97","endLine":5,"endColumn":40},{"ruleId":"94","severity":1,"message":"108","line":9,"column":11,"nodeType":"96","messageId":"97","endLine":9,"endColumn":19},{"ruleId":"94","severity":1,"message":"109","line":10,"column":11,"nodeType":"96","messageId":"97","endLine":10,"endColumn":22},{"ruleId":"94","severity":1,"message":"110","line":4,"column":8,"nodeType":"96","messageId":"97","endLine":4,"endColumn":17},{"ruleId":"94","severity":1,"message":"111","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":18},{"ruleId":"94","severity":1,"message":"95","line":13,"column":8,"nodeType":"96","messageId":"97","endLine":13,"endColumn":16},{"ruleId":"94","severity":1,"message":"98","line":13,"column":20,"nodeType":"96","messageId":"97","endLine":13,"endColumn":23},{"ruleId":"94","severity":1,"message":"104","line":13,"column":47,"nodeType":"96","messageId":"97","endLine":13,"endColumn":51},{"ruleId":"112","severity":1,"message":"113","line":34,"column":43,"nodeType":"114","messageId":"115","endLine":34,"endColumn":45},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'stateMarker.clusterZoom', 'stateMarker.scan_status', and 'stateMarker.scan_zoom'. Either include them or remove the dependency array.","ArrayExpression",["118"],"no-unused-vars","'Freedraw' is defined but never used.","Identifier","unusedVar","'ALL' is defined but never used.","'EDIT' is defined but never used.","'CREATE' is defined but never used.","'DELETE' is defined but never used.",["116"],["117"],"'NONE' is defined but never used.","'batch' is defined but never used.","'setDrawModeButton' is defined but never used.","'setDrawMode' is defined but never used.","'dispatch' is assigned a value but never used.","'stateMarker' is assigned a value but never used.","'FormGroup' is defined but never used.","'IconButton' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [dispatch, stateMarker.clusterZoom, stateMarker.endpoint, stateMarker.scan_status, stateMarker.scan_zoom]",{"range":"121","text":"122"},[1192,1214],"[dispatch, stateMarker.clusterZoom, stateMarker.endpoint, stateMarker.scan_status, stateMarker.scan_zoom]"]