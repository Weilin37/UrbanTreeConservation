[{"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\index.js":"1","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\store\\index.js":"2","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\App.js":"3","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\NavBar.js":"4","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\Map.js":"5","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\mapSlice.js":"6","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\markerSlice.js":"7","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\SearchBar.js":"8","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawCustom.js":"9","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawBounds.js":"10","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\RescanMarkers.js":"11","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawButtons.js":"12","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\GetMarkers.js":"13","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DataViewButtons.js":"14"},{"size":290,"mtime":1607204859726,"results":"15","hashOfConfig":"16"},{"size":601,"mtime":1607723585108,"results":"17","hashOfConfig":"16"},{"size":588,"mtime":1607723585099,"results":"18","hashOfConfig":"16"},{"size":848,"mtime":1607441961650,"results":"19","hashOfConfig":"16"},{"size":4223,"mtime":1608504915442,"results":"20","hashOfConfig":"16"},{"size":1947,"mtime":1608499159212,"results":"21","hashOfConfig":"16"},{"size":3791,"mtime":1608502761497,"results":"22","hashOfConfig":"16"},{"size":2381,"mtime":1608502761492,"results":"23","hashOfConfig":"16"},{"size":1572,"mtime":1608504901882,"results":"24","hashOfConfig":"16"},{"size":565,"mtime":1608502581849,"results":"25","hashOfConfig":"16"},{"size":2744,"mtime":1608502831498,"results":"26","hashOfConfig":"16"},{"size":1671,"mtime":1608501622735,"results":"27","hashOfConfig":"16"},{"size":1640,"mtime":1608502888170,"results":"28","hashOfConfig":"16"},{"size":1227,"mtime":1608505343800,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"9yxsz4",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\index.js",[],["61","62"],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\store\\index.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\App.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\NavBar.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\Map.js",["63"],"import React, { useEffect } from \"react\";\r\nimport RescanMarkers from \"./RescanMarkers\";\r\nimport DrawBounds from \"./DrawBounds\";\r\nimport FreeDrawCustom from \"./FreeDrawCustom\";\r\nimport FreeDrawButtons from \"./FreeDrawButtons\";\r\nimport GetMarkers from \"./GetMarkers\";\r\nimport DataViewButtons from \"./DataViewButtons\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\nimport \"../../css/app.css\";\r\nimport { useSelector, useDispatch, batch } from \"react-redux\";\r\nimport { getGlobal, getCity, getFreeDraw, setEndpoint, setViewStatus, clearCity, setScanStatus, setScanRadius, setScanCenter, setScanZoom } from \"../features/markerSlice\";\r\nimport { setSearch } from \"../features/mapSlice\";\r\n\r\nexport const LeafMap = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // state\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const stateMap = useSelector(state => state.map);\r\n\r\n    const clusterZoom = stateMarker.clusterZoom;\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        dispatch(getGlobal(\"/api/get/cities\"));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (stateMarker.scan_status === \"scanning\" && stateMarker.view_status === \"city\") {\r\n           dispatch(getCity(stateMarker.endpoint));\r\n        }\r\n        else if (stateMarker.scan_status === \"scanning\" && stateMarker.view_status === \"freedraw\") {\r\n           dispatch(getFreeDraw(stateMarker.endpoint));\r\n        }\r\n    }, [stateMarker.endpoint]);\r\n\r\n    function toRadian(degree) {\r\n        return degree*Math.PI/180;\r\n    }\r\n\r\n    function getDistance(origin, destination) {\r\n        // return distance in meters\r\n        var lon1 = toRadian(origin[1]),\r\n            lat1 = toRadian(origin[0]),\r\n            lon2 = toRadian(destination[1]),\r\n            lat2 = toRadian(destination[0]);\r\n\r\n        var deltaLat = lat2 - lat1;\r\n        var deltaLon = lon2 - lon1;\r\n\r\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n        var c = 2 * Math.asin(Math.sqrt(a));\r\n        var EARTH_RADIUS = 6371;\r\n        return c * EARTH_RADIUS * 1000;\r\n    }\r\n\r\n    function handlemoveend(e) {\r\n        const map = e.target;\r\n        const zoom = map.getZoom();\r\n        const lat = map.getCenter().lat;\r\n        const lng = map.getCenter().lng;\r\n\r\n        const bounds = map.getBounds();\r\n        const latNE = bounds['_northEast'].lat\r\n        const lngNE = bounds['_northEast'].lng\r\n        const radius = Math.round(0.5*getDistance([latNE, lngNE],[lat, lng]));\r\n\r\n        if (zoom < clusterZoom) {\r\n           dispatch(setViewStatus(\"global\"));\r\n        }\r\n        else {\r\n            dispatch(setViewStatus(\"city\"));\r\n            if (stateMap.search === \"searching\") {\r\n                batch(() => {\r\n                    dispatch(clearCity());\r\n                    dispatch(setScanRadius(radius));\r\n                    dispatch(setScanCenter({lat:lat, lng:lng}));\r\n                    dispatch(setScanZoom(zoom));\r\n                    dispatch(setSearch(\"waiting\"))\r\n                    dispatch(setEndpoint({type:\"city\", lat:lat, lng:lng, radius:radius, limit:1000}));\r\n                    dispatch(setScanStatus(\"scanning\"));\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // render component\r\n    if (stateMarker.global.length > 0) {\r\n        return (\r\n            <Map onmoveend={handlemoveend} doubleClickZoom={false} preferCanvas={true} center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n              <DrawBounds />\r\n              <GetMarkers />\r\n              <RescanMarkers />\r\n              <FreeDrawButtons />\r\n              <FreeDrawCustom />\r\n              <DataViewButtons />\r\n            </Map>\r\n        );\r\n    } else {\r\n        return (\r\n            <Map center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n            </Map>\r\n        );\r\n    }\r\n\r\n}","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\mapSlice.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\markerSlice.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\SearchBar.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawCustom.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawBounds.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\RescanMarkers.js",["64","65"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport { useDispatch, batch } from \"react-redux\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport { setSearch, setDrawMode } from \"../features/mapSlice\";\r\nimport { NONE } from 'react-leaflet-freedraw';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { setEndpoint, clearCity, setScanStatus, setScanRadius, setScanCenter, setScanZoom } from \"../features/markerSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  scanMargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(28),\r\n    left: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  }\r\n}));\r\n\r\n\r\nconst RescanMarkers = () => {\r\n    const dispatch = useDispatch();\r\n    // classes\r\n    const classes = useStyles();\r\n    const { map } = useLeaflet();\r\n\r\n    function toRadian(degree) {\r\n        return degree*Math.PI/180;\r\n    }\r\n\r\n    function getDistance(origin, destination) {\r\n        // return distance in meters\r\n        var lon1 = toRadian(origin[1]),\r\n            lat1 = toRadian(origin[0]),\r\n            lon2 = toRadian(destination[1]),\r\n            lat2 = toRadian(destination[0]);\r\n\r\n        var deltaLat = lat2 - lat1;\r\n        var deltaLon = lon2 - lon1;\r\n\r\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n        var c = 2 * Math.asin(Math.sqrt(a));\r\n        var EARTH_RADIUS = 6371;\r\n        return c * EARTH_RADIUS * 1000;\r\n    }\r\n\r\n    function handleclick(e) {\r\n        const center = map.getCenter();\r\n        const zoom = map.getZoom();\r\n        const lat = center.lat;\r\n        const lng = center.lng;\r\n        const bounds = map.getBounds();\r\n        const latNE = bounds['_northEast'].lat\r\n        const lngNE = bounds['_northEast'].lng\r\n        const radius = Math.round(0.5*getDistance([latNE, lngNE],[lat, lng]));\r\n\r\n        batch(() => {\r\n            dispatch(clearCity());\r\n            dispatch(setDrawMode(NONE));\r\n            dispatch(setScanRadius(radius));\r\n            dispatch(setScanCenter({lat:lat, lng:lng}));\r\n            dispatch(setScanZoom(zoom));\r\n            dispatch(setSearch(\"waiting\"));\r\n            dispatch(setEndpoint({type:\"trees\", lat:lat, lng:lng, radius:radius, limit:1000}));\r\n            dispatch(setScanStatus(\"scanning\"));\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Fab onClick={handleclick} size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.scanMargin}>\r\n                <AdjustIcon />\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RescanMarkers;","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawButtons.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\GetMarkers.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DataViewButtons.js",["66"],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":35,"column":8,"nodeType":"73","endLine":35,"endColumn":30,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":8,"column":10,"nodeType":"77","messageId":"78","endLine":8,"endColumn":24},{"ruleId":"75","severity":1,"message":"79","line":9,"column":10,"nodeType":"77","messageId":"78","endLine":9,"endColumn":23},{"ruleId":"75","severity":1,"message":"80","line":2,"column":23,"nodeType":"77","messageId":"78","endLine":2,"endColumn":28},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'stateMarker.scan_status', and 'stateMarker.view_status'. Either include them or remove the dependency array.","ArrayExpression",["83"],"no-unused-vars","'createMuiTheme' is defined but never used.","Identifier","unusedVar","'ThemeProvider' is defined but never used.","'batch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [dispatch, stateMarker.endpoint, stateMarker.scan_status, stateMarker.view_status]",{"range":"86","text":"87"},[1408,1430],"[dispatch, stateMarker.endpoint, stateMarker.scan_status, stateMarker.view_status]"]