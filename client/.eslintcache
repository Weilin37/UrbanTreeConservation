[{"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/index.js":"1","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/store/index.js":"2","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/App.js":"3","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/NavBar.js":"4","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/Map.js":"5","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/markerSlice.js":"6","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/mapSlice.js":"7","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/SearchBar.js":"8"},{"size":279,"mtime":1607134147775,"results":"9","hashOfConfig":"10"},{"size":552,"mtime":1607403475045,"results":"11","hashOfConfig":"10"},{"size":573,"mtime":1607489692942,"results":"12","hashOfConfig":"10"},{"size":824,"mtime":1607415102683,"results":"13","hashOfConfig":"10"},{"size":5676,"mtime":1607630552099,"results":"14","hashOfConfig":"10"},{"size":2194,"mtime":1607627012979,"results":"15","hashOfConfig":"10"},{"size":2029,"mtime":1607626376542,"results":"16","hashOfConfig":"10"},{"size":2309,"mtime":1607627905297,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"i0zfl8",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/index.js",[],["36","37"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/store/index.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/App.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/NavBar.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/Map.js",["38","39"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/markerSlice.js",["40"],"import { createSlice,createSelector,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\n\n// CREATE Thunk\nexport const getCities = createAsyncThunk(\"markers/getCities\", async (endpoint, thunkAPI) => {\n    try {\n        const response = await axios.get(endpoint);\n        return response.data;\n    } catch (error) {\n         return thunkAPI.rejectWithValue({ error: error.message });\n    }\n});\n\nexport const getTrees = createAsyncThunk(\"markers/getTrees\", async (endpoint, thunkAPI) => {\n    try {\n        const response = await axios.get(endpoint);\n        return response.data;\n    } catch (error) {\n         return thunkAPI.rejectWithValue({ error: error.message });\n    }\n});\n\n// CREATE SLICE\nconst markerSlice = createSlice({\n  name: \"markers\",\n  initialState: {\n    cities: [],\n    trees: [],\n    markerType: \"cities\",\n    previousMarkerType: \"cities\",\n    endpoint: \"/api/get/cities\",\n  },\n  reducers: {\n    setMarkerType: (state, action) => {\n        state.previousMarkerType = state.markerType;\n        state.markerType = action.payload;\n    },\n    setEndpoint: (state, action) => {\n        if (action.payload.type === \"cities\") {\n            state.endpoint = \"/api/get/cities\"\n        } else if (action.payload.type === \"trees\") {\n            state.endpoint = \"/api/get/trees?lat=\"+action.payload.lat+\"&lng=\"+action.payload.lng+\"&latbnd=\"+action.payload.latbnd+\"&lngbnd=\"+action.payload.lngbnd+\"&limit=\"+action.payload.limit\n        }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getCities.pending, (state) => {\n        state.cities = [];\n    });\n    builder.addCase(getCities.fulfilled, (state, { payload }) => {\n        state.cities = payload;\n    });\n    builder.addCase(getCities.rejected,(state, action) => {\n        state.loading = \"error\";\n    });\n    builder.addCase(getTrees.pending, (state) => {\n        state.trees = [];\n    });\n    builder.addCase(getTrees.fulfilled, (state, { payload }) => {\n        state.trees = payload;\n    });\n    builder.addCase(getTrees.rejected,(state, action) => {\n        state.loading = \"error\";\n    });\n  }\n});\n\nexport const { setMarkerType, setEndpoint } = markerSlice.actions;\n\nexport default markerSlice","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/mapSlice.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/SearchBar.js",[],{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","severity":1,"message":"46","line":30,"column":8,"nodeType":"47","endLine":30,"endColumn":30,"suggestions":"48"},{"ruleId":"49","severity":1,"message":"50","line":70,"column":11,"nodeType":"51","messageId":"52","endLine":70,"endColumn":21},{"ruleId":"49","severity":1,"message":"53","line":1,"column":22,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'stateMarker.markerType'. Either include them or remove the dependency array.","ArrayExpression",["56"],"no-unused-vars","'DrawBounds' is assigned a value but never used.","Identifier","unusedVar","'createSelector' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"57","fix":"58"},"Update the dependencies array to be: [dispatch, stateMarker.endpoint, stateMarker.markerType]",{"range":"59","text":"60"},[1025,1047],"[dispatch, stateMarker.endpoint, stateMarker.markerType]"]