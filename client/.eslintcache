[{"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\index.js":"1","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\store\\index.js":"2","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\App.js":"3","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\NavBar.js":"4","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\mapSlice.js":"5","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\markerSlice.js":"6","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\Map.js":"7","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\analysisSlice.js":"8","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\SearchBar.js":"9","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawButtons.js":"10","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawBounds.js":"11","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawSimilarityButtons.js":"12","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\RescanMarkers.js":"13","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawCustom.js":"14","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawAnalysisNative.js":"15","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DataViewButtons.js":"16","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\GetMarkers.js":"17","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawAnalysisSimilarity.js":"18"},{"size":290,"mtime":1607204859726,"results":"19","hashOfConfig":"20"},{"size":695,"mtime":1609389065109,"results":"21","hashOfConfig":"20"},{"size":426,"mtime":1609389065094,"results":"22","hashOfConfig":"20"},{"size":848,"mtime":1607441961650,"results":"23","hashOfConfig":"20"},{"size":1947,"mtime":1608499159212,"results":"24","hashOfConfig":"20"},{"size":4055,"mtime":1609389065107,"results":"25","hashOfConfig":"20"},{"size":5013,"mtime":1610482028867,"results":"26","hashOfConfig":"20"},{"size":2524,"mtime":1609389065105,"results":"27","hashOfConfig":"20"},{"size":2381,"mtime":1608502761492,"results":"28","hashOfConfig":"20"},{"size":1937,"mtime":1608510680424,"results":"29","hashOfConfig":"20"},{"size":565,"mtime":1608502581849,"results":"30","hashOfConfig":"20"},{"size":4454,"mtime":1609389065097,"results":"31","hashOfConfig":"20"},{"size":3648,"mtime":1608511811717,"results":"32","hashOfConfig":"20"},{"size":3030,"mtime":1609389065099,"results":"33","hashOfConfig":"20"},{"size":3182,"mtime":1610492008493,"results":"34","hashOfConfig":"20"},{"size":2800,"mtime":1608509891779,"results":"35","hashOfConfig":"20"},{"size":3546,"mtime":1610491420982,"results":"36","hashOfConfig":"20"},{"size":2089,"mtime":1609389065096,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"9yxsz4",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"40"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"40"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"40"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"40"},"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\index.js",[],["80","81"],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\store\\index.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\App.js",["82","83"],"import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport { LeafMap } from \"./Map\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { VictoryBar } from 'victory';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nconst App = () => (\r\n  <Grid container justify=\"center\" alignItems=\"center\" spacing={2}>\r\n    <NavBar />\r\n    <Grid item align=\"center\" xs={12} ><LeafMap /></Grid>\r\n  </Grid>\r\n);\r\n\r\nexport default App;","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\NavBar.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\mapSlice.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\markerSlice.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\Map.js",["84","85"],"import React, { useEffect } from \"react\";\r\nimport RescanMarkers from \"./RescanMarkers\";\r\nimport DrawBounds from \"./DrawBounds\";\r\nimport FreeDrawCustom from \"./FreeDrawCustom\";\r\nimport FreeDrawButtons from \"./FreeDrawButtons\";\r\nimport DrawAnalysisNative from \"./DrawAnalysisNative\";\r\nimport DrawSimilarityButtons from \"./DrawSimilarityButtons\";\r\nimport GetMarkers from \"./GetMarkers\";\r\nimport DataViewButtons from \"./DataViewButtons\";\r\nimport { Map, TileLayer } from \"react-leaflet\";\r\nimport \"../../css/app.css\";\r\nimport { useSelector, useDispatch, batch } from \"react-redux\";\r\nimport { getGlobal, getCity, getFreeDraw, setEndpoint, setViewStatus, clearCity, setScanStatus, setScanRadius, setScanCenter, setScanZoom } from \"../features/markerSlice\";\r\nimport { setSearch } from \"../features/mapSlice\";\r\n\r\nexport const LeafMap = () => {\r\n    const dispatch = useDispatch();\r\n\r\n    // state\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const stateMap = useSelector(state => state.map);\r\n\r\n    const cityZoom = stateMarker.cityZoom;\r\n\r\n    // Effects\r\n    useEffect(() => {\r\n        dispatch(getGlobal(stateMarker.endpoint));\r\n    }, [dispatch]);\r\n\r\n    useEffect(() => {\r\n        if (stateMarker.scan_status === \"scanning\" && stateMarker.view_status === \"city\") {\r\n           dispatch(getCity(stateMarker.endpoint));\r\n        }\r\n        else if (stateMarker.scan_status === \"scanning\" && stateMarker.view_status === \"freedraw\") {\r\n            console.log(\"api\")\r\n           dispatch(getFreeDraw(stateMarker.endpoint));\r\n        }\r\n    }, [stateMarker.scan_status]);\r\n\r\n    function toRadian(degree) {\r\n        return degree*Math.PI/180;\r\n    }\r\n\r\n    function getDistance(origin, destination) {\r\n        // return distance in meters\r\n        var lon1 = toRadian(origin[1]),\r\n            lat1 = toRadian(origin[0]),\r\n            lon2 = toRadian(destination[1]),\r\n            lat2 = toRadian(destination[0]);\r\n\r\n        var deltaLat = lat2 - lat1;\r\n        var deltaLon = lon2 - lon1;\r\n\r\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n        var c = 2 * Math.asin(Math.sqrt(a));\r\n        var EARTH_RADIUS = 6371;\r\n        return c * EARTH_RADIUS * 1000;\r\n    }\r\n\r\n    function handlezoomend(e) {\r\n        const map = e.target;\r\n        const zoom = map.getZoom();\r\n\r\n        if (zoom < cityZoom) {\r\n            if (stateMarker.view_status !== \"global\") {\r\n                dispatch(setViewStatus(\"global\"));\r\n            }\r\n        } else {\r\n            if (stateMarker.view_status === \"global\" && stateMarker.previous_view_status === \"global\") {\r\n                dispatch(setViewStatus(\"city\"));\r\n            } else if (stateMarker.view_status === \"global\" && stateMarker.previous_view_status !== \"global\") {\r\n                dispatch(setViewStatus(stateMarker.previous_view_status));\r\n            }\r\n        }\r\n    }\r\n\r\n    function handlemoveend(e) {\r\n        const map = e.target;\r\n        const zoom = map.getZoom();\r\n        const lat = map.getCenter().lat;\r\n        const lng = map.getCenter().lng;\r\n\r\n        const bounds = map.getBounds();\r\n        const latNE = bounds['_northEast'].lat\r\n        const lngNE = bounds['_northEast'].lng\r\n        const radius = Math.round(0.5*getDistance([latNE, lngNE],[lat, lng]));\r\n        if (zoom >= cityZoom) {\r\n            if (stateMap.search === \"searching\") {\r\n                batch(() => {\r\n                    dispatch(clearCity());\r\n                    dispatch(setScanRadius(radius));\r\n                    dispatch(setScanCenter({lat:lat, lng:lng}));\r\n                    dispatch(setScanZoom(zoom));\r\n                    dispatch(setSearch(\"waiting\"));\r\n                    dispatch(setEndpoint({type:\"city\", lat:lat, lng:lng, radius:radius, limit:50000}));\r\n                    dispatch(setScanStatus(\"scanning\"));\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    // render component\r\n    if (stateMarker.global.length > 0) {\r\n        return (\r\n            <Map onmoveend={handlemoveend} onzoomend={handlezoomend} doubleClickZoom={false} preferCanvas={true} center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n              <DrawBounds />\r\n              <GetMarkers />\r\n              <RescanMarkers />\r\n              <FreeDrawButtons />\r\n              <FreeDrawCustom />\r\n              <DataViewButtons />\r\n              <DrawAnalysisNative />\r\n              <DrawSimilarityButtons />\r\n            </Map>\r\n        );\r\n    } else {\r\n        return (\r\n            <Map center={[stateMap.lat, stateMap.lng]} zoom={stateMap.zoom} scrollWheelZoom={true}>\r\n              <TileLayer\r\n                url=\"https://server.arcgisonline.com/ArcGIS/rest/services/World_Street_Map/MapServer/tile/{z}/{y}/{x}\"\r\n              />\r\n            </Map>\r\n        );\r\n    }\r\n\r\n}","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\features\\analysisSlice.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\SearchBar.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawButtons.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawBounds.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawSimilarityButtons.js",["86","87","88","89","90"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport { setDrawMode } from \"../features/mapSlice\";\r\nimport { useDispatch, useSelector, batch } from \"react-redux\";\r\nimport Fab from '@material-ui/core/Fab';\r\nimport BorderColorIcon from '@material-ui/icons/BorderColor';\r\nimport { setViewStatus } from \"../features/markerSlice\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport Chip from '@material-ui/core/Chip';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport DrawAnalysisSimilarity from \"./DrawAnalysisSimilarity\";\r\nimport { getSimilarity, getSimilarityHistogram, setSimilarityCity1, setSimilarityCity2, setSimilarityState1, setSimilarityState2 } from \"../features/analysisSlice\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  chipMargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(7),\r\n    right: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  }\r\n}));\r\n\r\n\r\nconst DrawSimilarityButtons = () => {\r\n    const classes = useStyles();\r\n    const dispatch = useDispatch();\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const stateAnalysis = useSelector(state => state.analysis);\r\n    const { map } = useLeaflet();\r\n\r\n    function handleDelete(e) {\r\n        if (e === 1) {\r\n            batch(() => {\r\n                dispatch(setSimilarityCity1(\"\"));\r\n                dispatch(setSimilarityState1(\"\"));\r\n            });\r\n        } else if (e === 2) {\r\n            batch(() => {\r\n                dispatch(setSimilarityCity2(\"\"));\r\n                dispatch(setSimilarityState2(\"\"));\r\n            });\r\n        }\r\n    }\r\n\r\n    function handleSimilarityClick() {\r\n        if (stateAnalysis.similarityCity1 !== \"\" && stateAnalysis.similarityCity2 !== \"\") {\r\n            let endpoint = '/api/get/citysimilarity?city1='+stateAnalysis.similarityCity1+'&city2='+stateAnalysis.similarityCity2+\r\n            '&state1='+stateAnalysis.similarityState1+'&state2='+stateAnalysis.similarityState2;\r\n            batch(() => {\r\n                dispatch(getSimilarity(endpoint));\r\n                dispatch(getSimilarityHistogram());\r\n            });\r\n        }\r\n    }\r\n\r\n    if (stateMarker.view_status === \"global\" && (stateAnalysis.similarityCity1 !== \"\" || stateAnalysis.similarityCity2 !== \"\")) {\r\n\r\n        if (stateAnalysis.similarityCity1 !== \"\" && stateAnalysis.similarityCity2 === \"\") {\r\n            return (\r\n                <Paper className={classes.chipMargin}>\r\n                    <DrawAnalysisSimilarity />\r\n                    <Chip\r\n                      size=\"small\"\r\n                      label={stateAnalysis.similarityCity1+\", \"+stateAnalysis.similarityState1}\r\n                      onDelete={() => handleDelete(1)}\r\n                    />\r\n                    <Button size=\"small\" variant=\"outlined\" onClick={handleSimilarityClick} color=\"primary\">calculate</Button>\r\n                </Paper>\r\n            );\r\n        } else if (stateAnalysis.similarityCity2 !== \"\" && stateAnalysis.similarityCity1 === \"\") {\r\n            return (\r\n                <Paper className={classes.chipMargin}>\r\n                    <DrawAnalysisSimilarity />\r\n                    <Chip\r\n                      size=\"small\"\r\n                      label={stateAnalysis.similarityCity2+\", \"+stateAnalysis.similarityState2}\r\n                      onDelete={() => handleDelete(2)}\r\n                    />\r\n                    <Button size=\"small\" variant=\"outlined\" onClick={handleSimilarityClick} color=\"primary\">calculate</Button>\r\n                </Paper>\r\n            );\r\n        } else {\r\n            return (\r\n                <Paper className={classes.chipMargin}>\r\n                    <DrawAnalysisSimilarity />\r\n                    <Chip\r\n                      size=\"small\"\r\n                      label={stateAnalysis.similarityCity1+\", \"+stateAnalysis.similarityState1}\r\n                      onDelete={() => handleDelete(1)}\r\n                    />\r\n                    <Chip\r\n                      size=\"small\"\r\n                      label={stateAnalysis.similarityCity2+\", \"+stateAnalysis.similarityState2}\r\n                      onDelete={() => handleDelete(2)}\r\n                    />\r\n                    <Button size=\"small\" variant=\"outlined\" onClick={handleSimilarityClick} color=\"primary\">calculate</Button>\r\n                </Paper>\r\n            );\r\n        }\r\n\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default DrawSimilarityButtons;","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\RescanMarkers.js",["91","92"],"import { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AdjustIcon from '@material-ui/icons/Adjust';\r\nimport { useDispatch, useSelector, batch } from \"react-redux\";\r\nimport { useLeaflet } from \"react-leaflet\";\r\nimport { NONE } from 'react-leaflet-freedraw';\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\nimport { ThemeProvider } from '@material-ui/styles';\r\nimport { setEndpoint, clearCity, setScanStatus, setScanRadius, setScanCenter, setScanZoom, setViewStatus } from \"../features/markerSlice\";\r\nimport { setDrawMode, setSearch } from \"../features/mapSlice\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  scanMargin: {\r\n    margin: theme.spacing(1),\r\n    top: theme.spacing(28),\r\n    left: theme.spacing(1),\r\n    position: 'fixed',\r\n    zIndex: 1000,\r\n  }\r\n}));\r\n\r\n\r\nconst RescanMarkers = () => {\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const dispatch = useDispatch();\r\n    // classes\r\n    const classes = useStyles();\r\n    const { map } = useLeaflet();\r\n\r\n    function toRadian(degree) {\r\n        return degree*Math.PI/180;\r\n    }\r\n\r\n    function getDistance(origin, destination) {\r\n        // return distance in meters\r\n        var lon1 = toRadian(origin[1]),\r\n            lat1 = toRadian(origin[0]),\r\n            lon2 = toRadian(destination[1]),\r\n            lat2 = toRadian(destination[0]);\r\n\r\n        var deltaLat = lat2 - lat1;\r\n        var deltaLon = lon2 - lon1;\r\n\r\n        var a = Math.pow(Math.sin(deltaLat/2), 2) + Math.cos(lat1) * Math.cos(lat2) * Math.pow(Math.sin(deltaLon/2), 2);\r\n        var c = 2 * Math.asin(Math.sqrt(a));\r\n        var EARTH_RADIUS = 6371;\r\n        return c * EARTH_RADIUS * 1000;\r\n    }\r\n\r\n    function handleclick(e) {\r\n        if (stateMarker.view_status === \"city\" || stateMarker.view_status === \"global\") {\r\n            if (map.getZoom() < stateMarker.cityZoom) {\r\n                map.setZoom(stateMarker.cityZoom);\r\n            }\r\n            const zoom = map.getZoom();\r\n            const center = map.getCenter();\r\n            const lat = center.lat;\r\n            const lng = center.lng;\r\n            const bounds = map.getBounds();\r\n            const latNE = bounds['_northEast'].lat\r\n            const lngNE = bounds['_northEast'].lng\r\n            const radius = Math.round(0.5*getDistance([latNE, lngNE],[lat, lng]));\r\n\r\n            batch(() => {\r\n                dispatch(clearCity());\r\n                dispatch(setScanRadius(radius));\r\n                dispatch(setScanCenter({lat:lat, lng:lng}));\r\n                dispatch(setSearch(\"waiting\"));\r\n                if (zoom < stateMarker.cityZoom) {\r\n                    dispatch(setScanZoom(stateMarker.cityZoom));\r\n                } else {\r\n                    dispatch(setScanZoom(zoom));\r\n                }\r\n                dispatch(setViewStatus(\"city\"))\r\n                dispatch(setEndpoint({type:\"city\", lat:lat, lng:lng, radius:radius, limit:1000}));\r\n                dispatch(setScanStatus(\"scanning\"));\r\n            });\r\n        } else if (stateMarker.view_status === \"freedraw\") {\r\n            if (stateMarker.endpoint.length > 0) {\r\n                batch(() => {\r\n                    dispatch(setViewStatus(\"freedraw\"))\r\n                    dispatch(setScanStatus(\"scanning\"));\r\n                    dispatch(setDrawMode(NONE));\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Fab onClick={handleclick} size=\"small\" color=\"primary\" aria-label=\"add\" className={classes.scanMargin}>\r\n                <AdjustIcon />\r\n            </Fab>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default RescanMarkers;","C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\FreeDrawCustom.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawAnalysisNative.js",["93","94"],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DataViewButtons.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\GetMarkers.js",[],"C:\\Users\\Weilin\\Documents\\GitHub\\UrbanTreeConservation\\client\\src\\js\\components\\DrawAnalysisSimilarity.js",["95","96","97","98","99","100","101","102","103"],"import { useSelector } from \"react-redux\";\r\nimport { Circle } from \"react-leaflet\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { VictoryBar, VictoryChart, VictoryLine, VictoryHistogram, VictoryLabel, VictoryAxis, VictoryTheme } from 'victory';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Box from '@material-ui/core/Box';\r\nimport { setSimilarityCity1, setSimilarityCity2, getSimilarity } from \"../features/analysisSlice\";\r\n\r\n\r\n// Custom map components\r\nconst DrawAnalysisSimilarity = () => {\r\n    const stateMarker = useSelector(state => state.marker);\r\n    const stateAnalysis = useSelector(state => state.analysis);\r\n\r\n    if (stateMarker.view_status === \"global\" && stateAnalysis.similarityData['ds_similarity'] !== \"\") {\r\n        let ds_label = stateAnalysis.similarityData['city1']+\", \"+stateAnalysis.similarityData['state1']+\" vs. \"+stateAnalysis.similarityData['city2']+\", \"+stateAnalysis.similarityData['state2'];\r\n        return(\r\n            <Box>\r\n                <VictoryChart\r\n                  domainPadding={{ x: 20 }}\r\n                  padding={{ top: 50, bottom: 50, left: 50, right: 20 }}\r\n                >\r\n                    <VictoryLabel x={150} y={290} text={\"Dice Sorensen Similarity\"} />\r\n                    <VictoryLabel x={25} y={20} text={ds_label} />\r\n                    <VictoryHistogram\r\n                        style={{\r\n                          data: { fill: \"#c43a31\" }\r\n                        }}\r\n                        data={stateAnalysis.similarityHistogramData}\r\n                        bins={100}\r\n                    />\r\n                    <VictoryLine\r\n                      x={() => stateAnalysis.similarityData['ds_similarity']}\r\n                      samples={1}\r\n                      labels={[stateAnalysis.similarityData['ds_similarity']]}\r\n                      labelComponent={<VictoryLabel renderInPortal dx={25} dy={-100}/>}\r\n                    />\r\n                </VictoryChart>\r\n            </Box>\r\n        )\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default DrawAnalysisSimilarity;",{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":5,"column":10,"nodeType":"110","messageId":"111","endLine":5,"endColumn":20},{"ruleId":"108","severity":1,"message":"112","line":6,"column":8,"nodeType":"110","messageId":"111","endLine":6,"endColumn":13},{"ruleId":"113","severity":1,"message":"114","line":28,"column":8,"nodeType":"115","endLine":28,"endColumn":18,"suggestions":"116"},{"ruleId":"113","severity":1,"message":"117","line":38,"column":8,"nodeType":"115","endLine":38,"endColumn":33,"suggestions":"118"},{"ruleId":"108","severity":1,"message":"119","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":21},{"ruleId":"108","severity":1,"message":"120","line":4,"column":8,"nodeType":"110","messageId":"111","endLine":4,"endColumn":11},{"ruleId":"108","severity":1,"message":"121","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":23},{"ruleId":"108","severity":1,"message":"122","line":6,"column":10,"nodeType":"110","messageId":"111","endLine":6,"endColumn":23},{"ruleId":"108","severity":1,"message":"123","line":30,"column":13,"nodeType":"110","messageId":"111","endLine":30,"endColumn":16},{"ruleId":"108","severity":1,"message":"124","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":24},{"ruleId":"108","severity":1,"message":"125","line":8,"column":10,"nodeType":"110","messageId":"111","endLine":8,"endColumn":23},{"ruleId":"108","severity":1,"message":"126","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"127","line":59,"column":13,"nodeType":"110","messageId":"111","endLine":59,"endColumn":27},{"ruleId":"108","severity":1,"message":"126","line":2,"column":10,"nodeType":"110","messageId":"111","endLine":2,"endColumn":16},{"ruleId":"108","severity":1,"message":"128","line":3,"column":10,"nodeType":"110","messageId":"111","endLine":3,"endColumn":20},{"ruleId":"108","severity":1,"message":"109","line":4,"column":10,"nodeType":"110","messageId":"111","endLine":4,"endColumn":20},{"ruleId":"108","severity":1,"message":"129","line":4,"column":81,"nodeType":"110","messageId":"111","endLine":4,"endColumn":92},{"ruleId":"108","severity":1,"message":"130","line":4,"column":94,"nodeType":"110","messageId":"111","endLine":4,"endColumn":106},{"ruleId":"108","severity":1,"message":"112","line":5,"column":8,"nodeType":"110","messageId":"111","endLine":5,"endColumn":13},{"ruleId":"108","severity":1,"message":"131","line":7,"column":10,"nodeType":"110","messageId":"111","endLine":7,"endColumn":28},{"ruleId":"108","severity":1,"message":"132","line":7,"column":30,"nodeType":"110","messageId":"111","endLine":7,"endColumn":48},{"ruleId":"108","severity":1,"message":"133","line":7,"column":50,"nodeType":"110","messageId":"111","endLine":7,"endColumn":63},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'VictoryBar' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'stateMarker.endpoint'. Either include it or remove the dependency array.","ArrayExpression",["136"],"React Hook useEffect has missing dependencies: 'dispatch', 'stateMarker.endpoint', and 'stateMarker.view_status'. Either include them or remove the dependency array.",["137"],"'setDrawMode' is defined but never used.","'Fab' is defined but never used.","'BorderColorIcon' is defined but never used.","'setViewStatus' is defined but never used.","'map' is assigned a value but never used.","'createMuiTheme' is defined but never used.","'ThemeProvider' is defined but never used.","'Circle' is defined but never used.","'countNonNative' is assigned a value but never used.","'makeStyles' is defined but never used.","'VictoryAxis' is defined but never used.","'VictoryTheme' is defined but never used.","'setSimilarityCity1' is defined but never used.","'setSimilarityCity2' is defined but never used.","'getSimilarity' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"138","fix":"139"},{"desc":"140","fix":"141"},"Update the dependencies array to be: [dispatch, stateMarker.endpoint]",{"range":"142","text":"143"},"Update the dependencies array to be: [dispatch, stateMarker.endpoint, stateMarker.scan_status, stateMarker.view_status]",{"range":"144","text":"145"},[1150,1160],"[dispatch, stateMarker.endpoint]",[1555,1580],"[dispatch, stateMarker.endpoint, stateMarker.scan_status, stateMarker.view_status]"]