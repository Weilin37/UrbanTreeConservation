[{"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/index.js":"1","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/store/index.js":"2","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/App.js":"3","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/NavBar.js":"4","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/Map.js":"5","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/markerSlice.js":"6","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/mapSlice.js":"7","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/SearchBar.js":"8","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/RescanMarkers.js":"9"},{"size":279,"mtime":1607134147775,"results":"10","hashOfConfig":"11"},{"size":552,"mtime":1607403475045,"results":"12","hashOfConfig":"11"},{"size":573,"mtime":1607646143512,"results":"13","hashOfConfig":"11"},{"size":824,"mtime":1607415102683,"results":"14","hashOfConfig":"11"},{"size":6434,"mtime":1607658953903,"results":"15","hashOfConfig":"11"},{"size":2194,"mtime":1607627012979,"results":"16","hashOfConfig":"11"},{"size":2029,"mtime":1607630861761,"results":"17","hashOfConfig":"11"},{"size":2310,"mtime":1607630796709,"results":"18","hashOfConfig":"11"},{"size":642,"mtime":1607657892540,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"i0zfl8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/index.js",[],["40","41"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/store/index.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/App.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/NavBar.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/Map.js",["42","43","44"],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/markerSlice.js",["45"],"import { createSlice,createSelector,createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from 'axios';\n\n// CREATE Thunk\nexport const getCities = createAsyncThunk(\"markers/getCities\", async (endpoint, thunkAPI) => {\n    try {\n        const response = await axios.get(endpoint);\n        return response.data;\n    } catch (error) {\n         return thunkAPI.rejectWithValue({ error: error.message });\n    }\n});\n\nexport const getTrees = createAsyncThunk(\"markers/getTrees\", async (endpoint, thunkAPI) => {\n    try {\n        const response = await axios.get(endpoint);\n        return response.data;\n    } catch (error) {\n         return thunkAPI.rejectWithValue({ error: error.message });\n    }\n});\n\n// CREATE SLICE\nconst markerSlice = createSlice({\n  name: \"markers\",\n  initialState: {\n    cities: [],\n    trees: [],\n    markerType: \"cities\",\n    previousMarkerType: \"cities\",\n    endpoint: \"/api/get/cities\",\n  },\n  reducers: {\n    setMarkerType: (state, action) => {\n        state.previousMarkerType = state.markerType;\n        state.markerType = action.payload;\n    },\n    setEndpoint: (state, action) => {\n        if (action.payload.type === \"cities\") {\n            state.endpoint = \"/api/get/cities\"\n        } else if (action.payload.type === \"trees\") {\n            state.endpoint = \"/api/get/trees?lat=\"+action.payload.lat+\"&lng=\"+action.payload.lng+\"&latbnd=\"+action.payload.latbnd+\"&lngbnd=\"+action.payload.lngbnd+\"&limit=\"+action.payload.limit\n        }\n    },\n  },\n  extraReducers: (builder) => {\n    builder.addCase(getCities.pending, (state) => {\n        state.cities = [];\n    });\n    builder.addCase(getCities.fulfilled, (state, { payload }) => {\n        state.cities = payload;\n    });\n    builder.addCase(getCities.rejected,(state, action) => {\n        state.loading = \"error\";\n    });\n    builder.addCase(getTrees.pending, (state) => {\n        state.trees = [];\n    });\n    builder.addCase(getTrees.fulfilled, (state, { payload }) => {\n        state.trees = payload;\n    });\n    builder.addCase(getTrees.rejected,(state, action) => {\n        state.loading = \"error\";\n    });\n  }\n});\n\nexport const { setMarkerType, setEndpoint } = markerSlice.actions;\n\nexport default markerSlice","/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/features/mapSlice.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/SearchBar.js",[],"/Users/mengwei/Documents/GitHub/UrbanTreeConservation/client/src/js/components/RescanMarkers.js",["46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":31,"column":8,"nodeType":"53","endLine":31,"endColumn":30,"suggestions":"54"},{"ruleId":"55","severity":1,"message":"56","line":37,"column":14,"nodeType":"57","messageId":"58","endLine":37,"endColumn":25},{"ruleId":"55","severity":1,"message":"59","line":91,"column":11,"nodeType":"57","messageId":"58","endLine":91,"endColumn":21},{"ruleId":"55","severity":1,"message":"60","line":1,"column":22,"nodeType":"57","messageId":"58","endLine":1,"endColumn":36},{"ruleId":"55","severity":1,"message":"61","line":1,"column":10,"nodeType":"57","messageId":"58","endLine":1,"endColumn":14},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'stateMarker.markerType'. Either include them or remove the dependency array.","ArrayExpression",["64"],"no-unused-vars","'getDistance' is defined but never used.","Identifier","unusedVar","'DrawBounds' is assigned a value but never used.","'createSelector' is defined but never used.","'fade' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"65","fix":"66"},"Update the dependencies array to be: [dispatch, stateMarker.endpoint, stateMarker.markerType]",{"range":"67","text":"68"},[1070,1092],"[dispatch, stateMarker.endpoint, stateMarker.markerType]"]